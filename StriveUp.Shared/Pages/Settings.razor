@page "/settings"

<!-- Injections -->
@inject ICustomAuthStateProvider AuthStateProvider
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Settings</PageTitle>

<div class="container py-4">
    <h1 class="mb-4 text-center">Settings</h1>

    <div class="row g-3">
        <div class="col-12 col-md-6 d-flex">
            <a href="/change-email" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Change Email</span>
                <i class="bi bi-chevron-right text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/synchronize" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Synchronize Activities</span>
                <i class="bi bi-arrow-repeat text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/manage-devices" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Manage Devices</span>
                <i class="bi bi-phone text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <div class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100" @onclick="() => showModal = true" style="cursor: pointer;">
                <span>Appearance</span>
                <span class="text-muted small">@selectedTheme</span>
            </div>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/privacy-control" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Privacy Control</span>
                <i class="bi bi-shield-lock text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/default-metrics" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Default Metrics</span>
                <i class="bi bi-sliders text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/terms-of-service" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Terms Of Service</span>
                <i class="bi bi-file-earmark-text text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <a href="/privacy-policy" class="list-group-item list-group-item-action shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100">
                <span>Privacy Policy</span>
                <i class="bi bi-file-earmark-text text-muted"></i>
            </a>
        </div>

        <div class="col-12 col-md-6 d-flex">
            <button class="list-group-item list-group-item-action text-danger shadow-sm rounded d-flex justify-content-between align-items-center w-100 h-100" @onclick="HandleLogout">
                <span>Log Out</span>
                <i class="bi bi-box-arrow-right"></i>
            </button>
        </div>
    </div>
</div>

<GenericSelectModal TItem="string"
                    Show="@showModal"
                    ShowChanged="@(v => showModal = v)"
                    Label="Choose Theme"
                    Options="@themes"
                    SelectedValue="@selectedTheme"
                    SelectedValueChanged="OnThemeChanged" />

@code {
    private bool showModal = false;
    private string selectedTheme = "System";
    private List<string> themes = new() { "Light", "Dark", "System" };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var currentUser = authState.User;

            if (currentUser.Identity?.IsAuthenticated == false)
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    void OnThemeChanged(string theme)
    {
        selectedTheme = theme;
        // Optionally persist or apply the theme
    }

    async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
