@page "/feed"
@inject IActivityService ActivityService
@inject IProfileService ProfileService
@inject NavigationManager Navigation
@inject ICustomAuthStateProvider AuthStateProvider
@using StriveUp.Shared.DTOs
@using System.Security.Claims
@using StriveUp.Shared.DTOs.Activity


<PageTitle>Activity Feed</PageTitle>
<div class="container d-flex flex-column justify-content-center">
    @if (isLoading)
    {
        <!-- Loading Spinner -->
        <div class="loading-overlay">
            <div class="spinner"></div>
            <p class="loading-text">Loading feed. Please wait...</p>
        </div>
    }
    else if (activities?.Count == 0)
    {
        <!-- No Activities Call to Action -->
        <div class="text-center py-5">
            <h4 class="mb-3 text-muted">Your activity feed is empty</h4>
            <p class="text-secondary">Start tracking your journey or log a past activity.</p>
            <div class="d-flex justify-content-center gap-3 mt-4">
                <a class="btn btn-outline-primary rounded-pill px-4 py-2" href="/tracking">
                    🚶 Start Tracking
                </a>
                <a class="btn btn-primary rounded-pill px-4 py-2" href="/add-activity">
                    ✍️ Add Manually
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row g-3">
            @foreach (var activity in activities)
            {
                <ActivityCard Activity="activity" />
            }
        </div>
    }
</div>


@code {
    private List<UserActivityDto> activities = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var currentUser = authState.User;

            if (currentUser.Identity?.IsAuthenticated ?? false)
            {
                activities = await ActivityService.GetFeedAsync();
            }
            else
            {
                errorMessage = "You are not authenticated.";
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching activities: {ex}");
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToEdit()
    {
        Navigation.NavigateTo("/edit-activity");
    }
}
