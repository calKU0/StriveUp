@page "/feed"
@inject IActivityService ActivityService
@inject IProfileService ProfileService
@inject NavigationManager Navigation
@inject ICustomAuthStateProvider AuthStateProvider
@using StriveUp.Shared.DTOs
@using System.Security.Claims
@using StriveUp.Shared.Components;
@using StriveUp.Shared.DTOs.Activity


<PageTitle>Activity Feed</PageTitle>
<div class="container d-flex flex-column justify-content-center">
    @if (activities == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="row g-3">
            @foreach (var activity in activities)
            {
                <ActivityCard Activity="activity" />
            }
        </div>
    }
</div>

@code {
    private List<UserActivityDto> activities = new();
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var currentUser = authState.User;

            if (currentUser.Identity?.IsAuthenticated ?? false)
            {
                // Token is valid, fetch activities
                activities = await ActivityService.GetFeedAsync();
            }
            else
            {
                // User is not authenticated
                errorMessage = "You are not authenticated.";
                Navigation.NavigateTo("/login");  // Redirect to login page
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching activities: {ex}");
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void NavigateToEdit()
    {
        Navigation.NavigateTo("/edit-activity");
    }
}