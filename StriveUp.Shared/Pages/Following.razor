@page "/following"
@page "/following/{userName?}"

<!-- Usings -->
@using StriveUp.Shared.DTOs

<!-- Injections -->
@inject IFollowService FollowService
@inject NavigationManager Navigation
@inject ICustomAuthStateProvider AuthStateProvider

<PageTitle>Following</PageTitle>

<div class="container py-5">
    @if (isLoading)
    {
        <Spinner></Spinner>
    }
    else if (following.Any())
    {
        <h2 class="fw-bold text-center d-none d-md-block mb-4">@(isCurrentUser ? "People you follow" : $"People {userName} follows")</h2>
        <ul class="list-group">
            @foreach (var user in following)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center search-list-item" @onclick="() => OnListItemClick(user.UserName)">
                    <div class="d-flex align-items-center">
                        <img src="@user.Avatar" class="rounded-circle me-3" width="48" height="48" />
                        <div>
                            <strong>@user.FullName</strong><br />
                            <span class="text-muted">@user.UserName</span>
                        </div>
                    </div>
                    <button class="btn btn-sm @(user.IsFollowed ? "btn-outline-danger" : "btn-primary") @(user.UserName == currentUserName ? "d-none" : "d-flex")"
                            @onclick:stopPropagation
                            @onclick="@(() => ToggleFollow(user))">
                        @(user.IsFollowed ? "Unfollow" : "Follow")
                    </button>
                </li>
            }
        </ul>
    }
    else
    {
        <div class="text-center py-5 text-muted">
            @if (isCurrentUser)
            {
                <p class="mb-3">You are not following anyone.</p>
                <a href="search" class="btn btn-primary">Search Users</a>
            }
            else
            {
                <p class="mb-3">@($"{userName} is not following anyone.")</p>
            }
        </div>
    }
    <ErrorToast Message="@followErrorMessage"></ErrorToast>
</div>

@code {
    [Parameter] public string? Username { get; set; }
    private string userName = string.Empty;
    private List<UserFollowDto> following = new();
    private bool isLoading = true;
    private string followErrorMessage = string.Empty;
    private bool isCurrentUser = false;
    private string currentUserName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var currentUser = authState.User;

            if (currentUser.Identity?.IsAuthenticated == false || currentUser.Identity is null)
            {
                Navigation.NavigateTo("/login");
            }

            currentUserName = currentUser.Identity.Name;
            userName = Username ?? currentUserName;
            isCurrentUser = (userName == currentUser.Identity?.Name);

            following = await FollowService.GetUserFollowing(userName);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task ToggleFollow(UserFollowDto user)
    {
        bool originalFollowState = user.IsFollowed;
        user.IsFollowed = !originalFollowState;

        try
        {
            bool result;

            if (user.IsFollowed)
            {
                result = await FollowService.FollowAsync(user.UserId);
            }
            else
            {
                result = await FollowService.UnfollowAsync(user.UserId);
            }

            if (!result)
            {
                // Revert if operation failed
                user.IsFollowed = originalFollowState;
                followErrorMessage = $"Error {(user.IsFollowed ? "unfollowing" : "following")} user {user.UserName}. Please try again later.";
            }
        }
        catch (Exception ex)
        {
            // Revert on exception
            user.IsFollowed = originalFollowState;
            followErrorMessage = $"Error toggling follow status for user {user.UserName}. Please try again later.";
            Console.WriteLine($"Exception: {ex.Message}");
        }
    }

    private void OnListItemClick(string userName)
    {
        Navigation.NavigateTo($"/profile/{userName}");
    }
}
